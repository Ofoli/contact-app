{"ast":null,"code":"import axios from \"axios\";\nconst BASE_URL = \"https://jsonplaceholder.typicode.com/users\";\nasync function addContactRequest(payload) {\n  console.log(payload);\n  try {\n    const {\n      data\n    } = await axios.post(BASE_URL, payload);\n    return data;\n  } catch (err) {\n    console.log(err);\n  }\n}\nasync function fetchAllContactsRequest() {\n  try {\n    const {\n      data: contacts\n    } = await axios.get(BASE_URL);\n    return contacts;\n  } catch (err) {\n    console.log(err);\n    return [];\n  }\n}\n// async function fetchContactRequest() {}\n// async function updateContactRequest() {}\n\n// async function deleteContactRequest() {}\n\nexport { addContactRequest\n//   fetchContactRequest,\n//   fetchAllContactsRequest,\n//   updateContactRequest,\n//   deleteContactRequest,\n};","map":{"version":3,"names":["axios","BASE_URL","addContactRequest","payload","console","log","data","post","err","fetchAllContactsRequest","contacts","get"],"sources":["/Users/ofoli/Documents/projects/contact-app/src/requests/request.ts"],"sourcesContent":["import axios, { AxiosResponse } from \"axios\";\n\nconst BASE_URL = \"https://jsonplaceholder.typicode.com/users\";\n\ninterface Payload {\n  name: string;\n  email: string;\n  phone: string;\n}\n\ninterface ValidResponse extends Payload {\n  id: number;\n}\n\ntype Response = ValidResponse | undefined;\n\nasync function addContactRequest(payload: Payload): Promise<Response> {\n  console.log(payload);\n  try {\n    const { data } = await axios.post(BASE_URL, payload);\n    return data;\n  } catch (err) {\n    console.log(err);\n  }\n}\nasync function fetchAllContactsRequest(): Promise<ContactProp[]> {\n  try {\n    const { data: contacts } = await axios.get(BASE_URL);\n    return contacts;\n  } catch (err) {\n    console.log(err);\n    return [];\n  }\n}\n// async function fetchContactRequest() {}\n// async function updateContactRequest() {}\n\n// async function deleteContactRequest() {}\n\nexport {\n  addContactRequest,\n  //   fetchContactRequest,\n  //   fetchAllContactsRequest,\n  //   updateContactRequest,\n  //   deleteContactRequest,\n};\n"],"mappings":"AAAA,OAAOA,KAAK,MAAyB,OAAO;AAE5C,MAAMC,QAAQ,GAAG,4CAA4C;AAc7D,eAAeC,iBAAiB,CAACC,OAAgB,EAAqB;EACpEC,OAAO,CAACC,GAAG,CAACF,OAAO,CAAC;EACpB,IAAI;IACF,MAAM;MAAEG;IAAK,CAAC,GAAG,MAAMN,KAAK,CAACO,IAAI,CAACN,QAAQ,EAAEE,OAAO,CAAC;IACpD,OAAOG,IAAI;EACb,CAAC,CAAC,OAAOE,GAAG,EAAE;IACZJ,OAAO,CAACC,GAAG,CAACG,GAAG,CAAC;EAClB;AACF;AACA,eAAeC,uBAAuB,GAA2B;EAC/D,IAAI;IACF,MAAM;MAAEH,IAAI,EAAEI;IAAS,CAAC,GAAG,MAAMV,KAAK,CAACW,GAAG,CAACV,QAAQ,CAAC;IACpD,OAAOS,QAAQ;EACjB,CAAC,CAAC,OAAOF,GAAG,EAAE;IACZJ,OAAO,CAACC,GAAG,CAACG,GAAG,CAAC;IAChB,OAAO,EAAE;EACX;AACF;AACA;AACA;;AAEA;;AAEA,SACEN;AACA;AACA;AACA;AACA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}