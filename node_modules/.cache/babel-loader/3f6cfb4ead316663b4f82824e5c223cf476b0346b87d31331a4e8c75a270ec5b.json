{"ast":null,"code":"var _jsxFileName = \"/Users/ofoli/Documents/projects/contact-app/src/components/EditContact.tsx\",\n  _s = $RefreshSig$();\nimport { useState, useEffect } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport { Consumer } from \"../context/context\";\nimport TextInputGroup from \"../layout/TextInputGroup\";\nimport { fetchContactRequest, updateContactRequest } from \"../requests/request\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst NAME_ERROR = {\n  name: \"Name is required\"\n};\nconst EMAIL_ERROR = {\n  email: \"Email is required\"\n};\nconst PHONE_ERROR = {\n  phone: \"Phone is required\"\n};\nexport default function EditContact() {\n  _s();\n  const params = useParams();\n  const [state, setState] = useState({\n    id: \"\",\n    name: \"\",\n    email: \"\",\n    phone: \"\",\n    errors: null\n  });\n  useEffect(() => {\n    const fetchContact = async () => {\n      const id = \"1\";\n      const contact = await fetchContactRequest(id);\n      if (contact !== undefined) {\n        setState({\n          id,\n          name: contact.name,\n          email: contact.email,\n          phone: contact.phone,\n          errors: null\n        });\n      }\n    };\n    fetchContact();\n    return;\n  }, []);\n  const onSubmit = async (e, dispatch) => {\n    e.preventDefault();\n    const {\n      name,\n      email,\n      phone\n    } = state;\n\n    // Check For Errors\n    if (name === \"\") return setErrorNewState(setState, NAME_ERROR);\n    if (email === \"\") return setErrorNewState(setState, EMAIL_ERROR);\n    if (phone === \"\") return setErrorNewState(setState, PHONE_ERROR);\n    const updContact = {\n      name,\n      email,\n      phone\n    };\n\n    // const { id } = this.props.match.params;\n\n    const res = await updateContactRequest(\"1\", updContact);\n    if (res) dispatch({\n      type: \"UPDATE_CONTACT\",\n      payload: res\n    });\n\n    // Clear State\n    setState({\n      id: \"\",\n      name: \"\",\n      email: \"\",\n      phone: \"\",\n      errors: {}\n    });\n\n    // this.props.history.push(\"/\");\n  };\n\n  const handleChange = event => {\n    setState(prevState => ({\n      ...prevState,\n      [event.target.name]: event.target.value\n    }));\n  };\n  const {\n    name,\n    email,\n    phone,\n    errors\n  } = state;\n  return /*#__PURE__*/_jsxDEV(Consumer, {\n    children: value => {\n      const {\n        dispatch\n      } = value;\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"card mb-3\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"card-header\",\n          children: \"Edit Contact\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"card-body\",\n          children: /*#__PURE__*/_jsxDEV(\"form\", {\n            onSubmit: async e => await onSubmit(e, dispatch),\n            children: [/*#__PURE__*/_jsxDEV(TextInputGroup, {\n              type: \"text\",\n              label: \"Name\",\n              name: \"name\",\n              placeholder: \"Enter Name\",\n              value: name,\n              onChange: handleChange,\n              error: errors === null || errors === void 0 ? void 0 : errors.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 103,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(TextInputGroup, {\n              label: \"Email\",\n              name: \"email\",\n              type: \"email\",\n              placeholder: \"Enter Email\",\n              value: email,\n              onChange: handleChange,\n              error: errors === null || errors === void 0 ? void 0 : errors.email\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 112,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(TextInputGroup, {\n              label: \"Phone\",\n              name: \"phone\",\n              type: \"number\",\n              placeholder: \"Enter Phone\",\n              value: phone,\n              onChange: handleChange,\n              error: errors === null || errors === void 0 ? void 0 : errors.phone\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 121,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"submit\",\n              value: \"Update Contact\",\n              className: \"btn btn-light btn-block\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 130,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 102,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 11\n      }, this);\n    }\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 95,\n    columnNumber: 5\n  }, this);\n}\n_s(EditContact, \"rCxpEMkS2gQL+DE88Rpt5+cJ5Lc=\", false, function () {\n  return [useParams];\n});\n_c = EditContact;\nconst setErrorNewState = (setState, data) => setState(prevState => ({\n  ...prevState,\n  errors: {\n    ...prevState.errors,\n    ...data\n  }\n}));\nvar _c;\n$RefreshReg$(_c, \"EditContact\");","map":{"version":3,"names":["useState","useEffect","useParams","Consumer","TextInputGroup","fetchContactRequest","updateContactRequest","NAME_ERROR","name","EMAIL_ERROR","email","PHONE_ERROR","phone","EditContact","params","state","setState","id","errors","fetchContact","contact","undefined","onSubmit","e","dispatch","preventDefault","setErrorNewState","updContact","res","type","payload","handleChange","event","prevState","target","value","data"],"sources":["/Users/ofoli/Documents/projects/contact-app/src/components/EditContact.tsx"],"sourcesContent":["import { useState, useEffect, SyntheticEvent } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport { Consumer } from \"../context/context\";\nimport TextInputGroup from \"../layout/TextInputGroup\";\nimport { fetchContactRequest, updateContactRequest } from \"../requests/request\";\n\ninterface Errors {\n  name?: string;\n  email?: string;\n  phone?: string;\n}\ninterface EditContactState extends ContactProp {\n  errors: Errors | null;\n}\nconst NAME_ERROR = { name: \"Name is required\" };\nconst EMAIL_ERROR = { email: \"Email is required\" };\nconst PHONE_ERROR = { phone: \"Phone is required\" };\n\nexport default function EditContact() {\n  const params = useParams();\n  const [state, setState] = useState<EditContactState>({\n    id: \"\",\n    name: \"\",\n    email: \"\",\n    phone: \"\",\n    errors: null,\n  });\n\n  useEffect(() => {\n    const fetchContact = async () => {\n      const id = \"1\";\n      const contact = await fetchContactRequest(id);\n\n      if (contact !== undefined) {\n        setState({\n          id,\n          name: contact.name,\n          email: contact.email,\n          phone: contact.phone,\n          errors: null,\n        });\n      }\n    };\n\n    fetchContact();\n    return;\n  }, []);\n\n  const onSubmit = async (\n    e: React.BaseSyntheticEvent,\n    dispatch: DispatchType\n  ) => {\n    e.preventDefault();\n\n    const { name, email, phone } = state;\n\n    // Check For Errors\n    if (name === \"\") return setErrorNewState(setState, NAME_ERROR);\n    if (email === \"\") return setErrorNewState(setState, EMAIL_ERROR);\n    if (phone === \"\") return setErrorNewState(setState, PHONE_ERROR);\n\n    const updContact = {\n      name,\n      email,\n      phone,\n    };\n\n    // const { id } = this.props.match.params;\n\n    const res = await updateContactRequest(\"1\", updContact);\n    if (res) dispatch({ type: \"UPDATE_CONTACT\", payload: res });\n\n    // Clear State\n    setState({\n      id: \"\",\n      name: \"\",\n      email: \"\",\n      phone: \"\",\n      errors: {},\n    });\n\n    // this.props.history.push(\"/\");\n  };\n\n  const handleChange = (event: React.BaseSyntheticEvent) => {\n    setState((prevState) => ({\n      ...prevState,\n      [event.target.name]: event.target.value,\n    }));\n  };\n\n  const { name, email, phone, errors } = state;\n\n  return (\n    <Consumer>\n      {(value) => {\n        const { dispatch } = value;\n        return (\n          <div className=\"card mb-3\">\n            <div className=\"card-header\">Edit Contact</div>\n            <div className=\"card-body\">\n              <form onSubmit={async (e) => await onSubmit(e, dispatch)}>\n                <TextInputGroup\n                  type=\"text\"\n                  label=\"Name\"\n                  name=\"name\"\n                  placeholder=\"Enter Name\"\n                  value={name}\n                  onChange={handleChange}\n                  error={errors?.name}\n                />\n                <TextInputGroup\n                  label=\"Email\"\n                  name=\"email\"\n                  type=\"email\"\n                  placeholder=\"Enter Email\"\n                  value={email}\n                  onChange={handleChange}\n                  error={errors?.email}\n                />\n                <TextInputGroup\n                  label=\"Phone\"\n                  name=\"phone\"\n                  type=\"number\"\n                  placeholder=\"Enter Phone\"\n                  value={phone}\n                  onChange={handleChange}\n                  error={errors?.phone}\n                />\n                <input\n                  type=\"submit\"\n                  value=\"Update Contact\"\n                  className=\"btn btn-light btn-block\"\n                />\n              </form>\n            </div>\n          </div>\n        );\n      }}\n    </Consumer>\n  );\n}\n\nconst setErrorNewState = (\n  setState: React.Dispatch<React.SetStateAction<EditContactState>>,\n  data: Errors\n) =>\n  setState((prevState) => ({\n    ...prevState,\n    errors: { ...prevState.errors, ...data },\n  }));\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}